# This is the entry point for CI. It will setup the application, then run lint, test, and eventually publish if not the main branch
name: 'Main'
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: build-${{ github.ref}}
    if: ${{ !startsWith(github.head_ref, 'version-bump') }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          # Check for outdated framework version
          current_version=$(node -pe "require('${{ github.workspace }}/package.json').version")
          git fetch origin ${{ github.base_ref }}
          git checkout ${{ github.base_ref }}
          main_version=$(node -pe "require('${{ github.workspace }}/package.json').version")

          if [ "$main_version" != "$current_version" ]; then
           echo "Error: Package version on current branch ($current_version) does not match the one on ${{ github.base_ref }} branch ($main_version)"
          exit 1
          fi
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn build
  lint:
    runs-on: ubuntu-latest
    concurrency: lint-${{ github.ref }}
    if: ${{ !startsWith(github.head_ref, 'version-bump') }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn lint
      - run: yarn prettier --check **/*.{ts,md}
  test:
    concurrency: test-${{ github.ref }}
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'version-bump') }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: |
          # Check for test.only() in test files
          set +e
            files=$(find ${{ github.workspace }}/test -name "*.test.ts" | xargs grep -l 'test.only')
          set -e
          
          if [[ -n $files ]]; then
            echo "Error: Found /test.only/ in following test files:"
            echo "$files"
            exit 1
          fi
      - run: yarn test
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: ./**/coverage/tmp/*.json
  # Only run if tests have run and completed successfully
  code-coverage:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'version-bump') }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: actions/download-artifact@v3
        with:
          name: coverage-reports
      - run: yarn code-coverage
